name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: 🟢 Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 📝 Write .env.production from secret
        run: echo "${{ secrets.ENV_PRODUCTION }}" > .env.production

      - name: 📦 Parse .env.production into environment variables
        run: |
          set -a
          source .env.production
          echo "DB_USERNAME=$DB_USERNAME" >> $GITHUB_ENV
          echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV
          echo "DB_NAME=$DB_NAME" >> $GITHUB_ENV
          echo "DB_PORT=$DB_PORT" >> $GITHUB_ENV
          set +a

      - name: 🚀 Start PostgreSQL service manually
        run: |
          docker run -d \
            --name postgres \
            -e POSTGRES_USER=$DB_USERNAME \
            -e POSTGRES_PASSWORD=$DB_PASSWORD \
            -e POSTGRES_DB=$DB_NAME \
            -p $DB_PORT:5432 \
            --health-cmd="pg_isready" \
            --health-interval=10s \
            --health-timeout=5s \
            --health-retries=5 \
            postgres:13

      - name: 🕒 Wait for PostgreSQL to be healthy
        run: |
          for i in {1..10}; do
            if docker exec postgres pg_isready; then
              echo "✅ Postgres is ready"
              break
            fi
            echo "⏳ Waiting for Postgres..."
            sleep 3
          done

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📜 Log installed packages
        run: npm list

      - name: 🏗️ Build app
        run: npm run build

      - name: 📜 Run migrations
        run: npm run typeorm -- migration:run

      - name: 🔎 Run unit tests
        run: npm run test

      - name: 🧪 Run e2e tests
        run: npm run test:e2e
